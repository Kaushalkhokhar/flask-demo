{"version":3,"sources":["pages/reset/Form.module.css","UI/Modal.module.css","UI/Card.module.css","UI/Button.module.css","UI/LoadingSpinner.module.css","pages/login/Login.module.css","pages/register/UserForm.module.css","UI/Input.module.css","store/auth-context.js","components/layout/Navbar.js","components/layout/MainHeader.js","components/layout/Layout.js","pages/home/Home.js","UI/Card.js","UI/Button.js","UI/Modal.js","UI/LoadingSpinner.js","hooks/use-input.js","hooks/use-sendData.js","UI/Email.js","UI/Password.js","pages/login/Login.js","hooks/use-getData.js","pages/about/About.js","UI/Username.js","UI/ConfPassword.js","pages/register/UserForm.js","pages/register/Register.js","pages/users/UserList.js","pages/users/Users.js","pages/logout/Logout.js","pages/reset/ResetEmailForm.js","pages/reset/ResetPasswordForm.js","pages/NotFound.js","App.js","index.js","components/layout/Navbar.module.css"],"names":["module","exports","AuthContext","React","createContext","token","tokenHandler","AuthContextProvider","props","useState","setToken","useCallback","Provider","value","children","Navbar","useContext","className","classes","nav","nav__links","nav__item","nav__link","activeClassName","active","to","MainHeader","Layout","Home","Card","card","Button","button","type","onClick","disabled","Backdrop","backdrop","Overlays","overlays","title","content","Modal","ReactDOM","createPortal","document","getElementById","LoadingSpinner","spinner","useInput","enteredValue","setEnteredValue","isTouched","setIsTouched","deFocused","setDeFocused","inputChangeHandler","event","target","inputBlurHandler","reset","useSendData","inputIsValid","setInputIsValid","errorResponse","setErrorResponse","isLoading","setIsLoading","successResponse","setSuccessResponse","sendInput","url","inputType","a","fetch","method","headers","body","JSON","stringify","response","ok","status","json","error","Error","data","message","success","setValidation","validation","resetState","Email","emailInputValue","emailIsTouched","emailDeFocused","emailChangeHandler","emailBlurHandler","emailInputIsValid","emailErrorResponse","passEmailData","onPassEmailData","useEffect","identifier","setTimeout","clearTimeout","emailInputClasses","invalid","htmlFor","id","onChange","onBlur","placeholder","register","Password","passwordInputValue","passwordIsTouched","passwordDeFocused","passwordChangeHandler","passwordBlurHandler","passwordInputIsValid","passwordErrorResponse","passPasswordData","onPassPasswordData","passwordInputClasses","Valid","Login","history","useHistory","ctx","emailData","setEmailData","passwordData","setPasswordData","formIsValid","push","payload","form","onSubmit","preventDefault","userData","email","password","useGetData","setData","setError","isSuccess","setIsScuccess","fetchData","About","ctxAuth","Username","nameInputValue","nameIsTouched","nameDeFocused","nameChangeHandler","nameBlurHandler","nameInputIsValid","nameErrorResponse","passNameData","onPassNameData","nameInputClasses","ConfPassword","confPasswordInputValue","confPasswordIsTouched","confPasswordDeFocused","confPasswordChangeHandler","confPasswordBlurHandler","passConfPasswordData","onPassConfPasswordData","confPasswordInputIsValid","confPasswordInputClasses","trim","length","UserForm","usernameData","setUsernameData","confPasswordData","setConfPasswordData","newUser","username","onAddUser","Register","addUser","UserList","users_list","users","map","user","Users","usersData","getUser","Logout","ResetEmailForm","modalClickHandler","newData","ResetPasswordForm","params","useParams","console","log","NotFound","App","path","exact","render"],"mappings":"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","file":"static/js/main.60474b77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__iqRZI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3WCoP\",\"overlays\":\"Modal_overlays__15wll\",\"content\":\"Modal_content__2ChuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1HVZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__33K7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3c9GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__35a2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"UserForm_form__3afJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"Input_form-control__1lNF8\",\"invalid\":\"Input_invalid__Trpmy\",\"error-text\":\"Input_error-text__2t8DD\",\"valid-text\":\"Input_valid-text__2XMyJ\",\"info-text\":\"Input_info-text__2a93t\"};","import React, { useCallback, useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  token: false,\r\n  tokenHandler: (token) => {},\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const [token, setToken] = useState(false);\r\n  const tokenHandler = useCallback((token) => {\r\n    setToken(token);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, tokenHandler }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  const ctxAuth = useContext(AuthContext);\r\n\r\n  const { token } = ctxAuth;\r\n\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <ul className={classes.nav__links}>\r\n        <li className={classes.nav__item}>\r\n          <NavLink\r\n            className={classes.nav__link}\r\n            activeClassName={classes.active}\r\n            to=\"/home\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={classes.nav__link}\r\n            activeClassName={classes.active}\r\n            to=\"/about\"\r\n          >\r\n            About\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={classes.nav__link}\r\n            activeClassName={classes.active}\r\n            to=\"/users\"\r\n          >\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            className={classes.nav__link}\r\n            activeClassName={classes.active}\r\n            to=\"/register\"\r\n          >\r\n            Register\r\n          </NavLink>\r\n        </li>\r\n        {!token && (\r\n          <li>\r\n            <NavLink\r\n              className={classes.nav__link}\r\n              activeClassName={classes.active}\r\n              to=\"/login\"\r\n            >\r\n              Login\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n        {token && <NavLink\r\n          className={classes.nav__link}\r\n          activeClassName={classes.active}\r\n          to=\"/logout\"\r\n        >\r\n          Logout\r\n        </NavLink>}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\n\r\nconst MainHeader = () => {\r\n  return (\r\n    <header>\r\n      <Navbar />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import { Fragment } from \"react\";\r\nimport MainHeader from \"./MainHeader\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n    <Fragment> \r\n        <MainHeader />\r\n        <div>{props.children}</div>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","const Home = () => {\r\n    return <h2>This is home page</h2>\r\n}\r\n\r\nexport default Home","import classes from './Card.module.css'\r\n\r\nconst Card = (props) => {\r\n    return <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import classes from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={props.className || classes.button}\r\n      type={props.type || \"button\"}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled || false}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Button from \"./Button\";\r\nimport Card from \"./Card\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return (\r\n    <div className={classes.backdrop} onClick={props.onClick}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Overlays = (props) => {\r\n  return (\r\n    <Card className={classes.overlays}>\r\n      <header>\r\n        <h2>{props.title}</h2>\r\n      </header>\r\n      <div className={classes.content}>{props.content}</div>\r\n      <footer>\r\n        <Button onClick={props.onClick}>Close</Button>\r\n      </footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClick={props.onClick} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <Overlays\r\n          title={props.title}\r\n          content={props.content}\r\n          onClick={props.onClick}\r\n        />,\r\n        document.getElementById(\"overlays-root\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import classes from './LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n}\r\n\r\nexport default LoadingSpinner;","import { useCallback, useState } from \"react\";\r\n\r\nconst useInput = () => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const [deFocused, setDeFocused] = useState(false);\r\n\r\n  const inputChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n    setIsTouched(true); // this is for validation on every key stroke\r\n    // if we want on blur only this can be removed\r\n    setDeFocused(false);\r\n  };\r\n\r\n  //  this can be added if we want to check validation on blur\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n    setDeFocused(true);\r\n  };\r\n\r\n  const reset = useCallback(() => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n    setDeFocused(false);\r\n  },[]);\r\n\r\n  return {\r\n    enteredValue,\r\n    isTouched,\r\n    deFocused,\r\n    inputChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nconst useSendData = () => {\r\n  const [inputIsValid, setInputIsValid] = useState(false);\r\n  const [errorResponse, setErrorResponse] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [successResponse, setSuccessResponse] = useState({});\r\n  \r\n  // Here inputType can be usernam, password, email, confirmPassword, submit etc.\r\n  const sendInput = useCallback(async (url, inputType, enteredValue = null) => {\r\n    setInputIsValid(false);\r\n    setErrorResponse(false);\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ value: enteredValue, type: inputType }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 401) {\r\n          const error = await response.json();\r\n          throw new Error(error.data.message);\r\n        } else {\r\n          throw new Error(\"Something went wrong. Please try again\");\r\n        }\r\n      }\r\n      const success = await response.json();\r\n      setSuccessResponse(success.data);\r\n      setInputIsValid(true);\r\n    } catch (err) {\r\n      setErrorResponse(err.message);\r\n      setInputIsValid(false);\r\n      setSuccessResponse(\"\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const setValidation = useCallback((validation) => {\r\n    setInputIsValid(validation);\r\n  }, []);\r\n\r\n  const resetState = useCallback(() => {\r\n    setInputIsValid(false);\r\n    setErrorResponse(false);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    inputIsValid,\r\n    errorResponse,\r\n    isLoading,\r\n    successResponse,\r\n    sendInput,\r\n    setValidation,\r\n    resetState,\r\n  };\r\n};\r\n\r\nexport default useSendData;\r\n","import { useEffect } from \"react\";\r\nimport useInput from \"../hooks/use-input\";\r\nimport useSendData from \"../hooks/use-sendData\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Email = (props) => {\r\n  const {\r\n    enteredValue: emailInputValue,\r\n    isTouched: emailIsTouched,\r\n    deFocused: emailDeFocused,\r\n    inputChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n  } = useInput();\r\n\r\n  const {\r\n    inputIsValid: emailInputIsValid,\r\n    errorResponse: emailErrorResponse,\r\n    successResponse: success,\r\n    sendInput,\r\n  } = useSendData();\r\n\r\n  const { onPassEmailData: passEmailData, url } = props;\r\n\r\n  useEffect(() => {\r\n    if (!emailIsTouched) {\r\n      return;\r\n    }\r\n    const identifier = setTimeout(() => {\r\n      sendInput(url, \"email\", emailInputValue);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [emailIsTouched, emailInputValue, url, sendInput]);\r\n\r\n  useEffect(()=>{\r\n    passEmailData({emailInputValue, emailInputIsValid});\r\n  },[passEmailData, emailInputValue, emailInputIsValid,])\r\n\r\n  const emailInputClasses =\r\n    !emailInputIsValid && emailIsTouched\r\n      ? `${classes[\"form-control\"]} ${classes.invalid}`\r\n      : classes[\"form-control\"];\r\n\r\n  return (\r\n    <div className={emailInputClasses}>\r\n      <label htmlFor=\"email\">Your E-mail</label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        onChange={emailChangeHandler}\r\n        onBlur={emailBlurHandler}\r\n        value={emailInputValue}\r\n        placeholder=\"Email\"\r\n      />\r\n      {emailErrorResponse && !emailDeFocused && (\r\n        <p className={classes[\"info-text\"]}>{emailErrorResponse}</p>\r\n      )}\r\n      {emailErrorResponse && emailDeFocused && (\r\n        <p className={classes[\"error-text\"]}>{emailErrorResponse}</p>\r\n      )}\r\n      {props.register &&  emailInputIsValid && (\r\n        <p className={classes[\"valid-text\"]}>{success.message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","import { useEffect } from \"react\";\r\nimport useSendData from \"../hooks/use-sendData\";\r\nimport useInput from \"../hooks/use-input\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Password = (props) => {\r\n  const {\r\n    enteredValue: passwordInputValue,\r\n    isTouched: passwordIsTouched,\r\n    deFocused: passwordDeFocused,\r\n    inputChangeHandler: passwordChangeHandler,\r\n    inputBlurHandler: passwordBlurHandler,\r\n  } = useInput();\r\n  const {\r\n    inputIsValid: passwordInputIsValid,\r\n    errorResponse: passwordErrorResponse,\r\n    successResponse: success,\r\n    sendInput,\r\n  } = useSendData();\r\n\r\n  const { onPassPasswordData: passPasswordData, url } = props;\r\n\r\n  useEffect(() => {\r\n    if (!passwordIsTouched) {\r\n      return\r\n    }\r\n    const identifier = setTimeout(() => { \r\n      sendInput(url, \"password\", passwordInputValue);\r\n    }, 500);\r\n    return ()=>{\r\n      clearTimeout(identifier)\r\n    }\r\n  }, [passwordIsTouched, passwordInputValue, url, sendInput]);\r\n\r\n  useEffect(()=>{\r\n    passPasswordData({passwordInputValue, passwordInputIsValid});\r\n  },[passPasswordData, passwordInputValue, passwordInputIsValid])\r\n\r\n  const passwordInputClasses =\r\n    !passwordInputIsValid && passwordIsTouched\r\n      ? `${classes[\"form-control\"]} ${classes.Valid}`\r\n      : classes[\"form-control\"];\r\n\r\n  return (\r\n    <div className={passwordInputClasses}>\r\n      <label htmlFor=\"password\">Your E-mail</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        onChange={passwordChangeHandler}\r\n        onBlur={passwordBlurHandler}\r\n        value={passwordInputValue}\r\n        placeholder=\"Password\"\r\n      />\r\n      {passwordErrorResponse && !passwordDeFocused && (\r\n        <p className={classes[\"info-text\"]}>{passwordErrorResponse}</p>\r\n      )}\r\n      {passwordErrorResponse && passwordDeFocused && (\r\n        <p className={classes[\"error-text\"]}>{passwordErrorResponse}</p>\r\n      )}\r\n      { props.register && passwordInputIsValid && (\r\n        <p className={classes[\"valid-text\"]}>{success.message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import { useContext, useEffect, Fragment, useState, useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport Modal from \"../../UI/Modal\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport Email from \"../../UI/Email\";\r\nimport Password from \"../../UI/Password\";\r\n\r\nimport useSendData from \"../../hooks/use-sendData\";\r\nimport classes from \"./Login.module.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const ctx = useContext(AuthContext);\r\n  const [emailData, setEmailData] = useState({});\r\n  const [passwordData, setPasswordData] = useState({});\r\n\r\n  const url = \"/api/login\";\r\n\r\n  const {\r\n    errorResponse: error,\r\n    successResponse,\r\n    isLoading,\r\n    sendInput,\r\n    resetState,\r\n  } = useSendData();\r\n\r\n  const passEmailData = useCallback((data) => {\r\n    setEmailData(data);\r\n  }, []);\r\n\r\n  const passPasswordData = useCallback((data) => {\r\n    setPasswordData(data);\r\n  }, []);\r\n\r\n  let formIsValid = false;\r\n\r\n  if (emailData.emailInputIsValid && passwordData.passwordInputIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const { token, tokenHandler } = ctx;\r\n  useEffect(() => {\r\n    if (token) {\r\n      history.push(\"/home\");\r\n      return;\r\n    }\r\n    tokenHandler(successResponse.payload);\r\n  }, [successResponse, token, history, tokenHandler]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // This need only when we don't disable submit button\r\n    // if (!emailValueIsValid || !passwordInputIsValid) {\r\n    //   return;\r\n    // }\r\n    const userData = {\r\n      email: emailData.emailInputValue,\r\n      password: passwordData.passwordInputValue,\r\n    };\r\n    sendInput(url, \"submit\", userData);\r\n  };\r\n\r\n  const modalClickHandler = () => {\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && (\r\n        <Card className={classes.form}>\r\n          <form onSubmit={submitHandler}>\r\n            <Email onPassEmailData={passEmailData} url={url} />\r\n            <Password onPassPasswordData={passPasswordData} url={url} />\r\n            <Button type=\"submit\" disabled={!formIsValid}>\r\n              Login\r\n            </Button>\r\n            <Link to=\"/reset_request\">Forgot Password?</Link>\r\n          </form>\r\n        </Card>\r\n      )}\r\n      {isLoading && !error && <LoadingSpinner />}\r\n      {!isLoading && error && (\r\n        <Modal\r\n          onClick={modalClickHandler}\r\n          title={\"Error Message\"}\r\n          content={error}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useCallback, useState } from \"react\";\r\n\r\nconst useGetData = (url, token = null, payload = null) => {\r\n  const [data, setData] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSuccess, setIsScuccess] = useState(false);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setData({});\r\n    setError(false);\r\n    setIsScuccess(false);\r\n    const response = await fetch(url, {\r\n      headers: {\r\n        \"x-access-token\": token,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status === 401) {\r\n        const error = await response.json();\r\n        setError(error.data.message);\r\n      } else {\r\n        setError(\"Something went wrong. Please try again\");\r\n      }\r\n    } else {\r\n      const success = await response.json();\r\n      setData(success.data);\r\n      setIsScuccess(true);\r\n    }\r\n    setIsLoading(false);\r\n  }, [url, token]);\r\n\r\n  const resetState = () => {\r\n    setIsLoading(false);\r\n    setIsScuccess(false);\r\n    setError(false);\r\n  };\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    isLoading,\r\n    isSuccess,\r\n    fetchData,\r\n    resetState,\r\n  };\r\n};\r\n\r\nexport default useGetData;\r\n","import { Fragment, useContext, useEffect } from \"react\";\r\nimport useGetData from \"../../hooks/use-getData\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\n\r\nimport Modal from \"../../UI/Modal\";\r\n\r\nconst About = () => {\r\n  const ctxAuth = useContext(AuthContext)\r\n  const {\r\n    data,\r\n    error,\r\n    isLoading,\r\n    isSuccess,\r\n    resetState,\r\n    fetchData,} = useGetData('/api/about', ctxAuth.token)\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const modalClickHandler = () => {\r\n    resetState()\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isSuccess && <p>{data.message}</p>}\r\n      {isLoading && <LoadingSpinner />}\r\n      {error && (\r\n      <Modal\r\n        onClick={modalClickHandler}\r\n        title={\"Error Message\"}\r\n        content={error}\r\n      />\r\n    )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { useEffect } from \"react\";\r\nimport useInput from \"../hooks/use-input\";\r\nimport useSendData from \"../hooks/use-sendData\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Username = (props) => {\r\n  const {\r\n    enteredValue: nameInputValue,\r\n    isTouched: nameIsTouched,\r\n    deFocused: nameDeFocused,\r\n    inputChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n  } = useInput();\r\n\r\n  const {\r\n    inputIsValid: nameInputIsValid,\r\n    errorResponse: nameErrorResponse,\r\n    successResponse: success,\r\n    sendInput,\r\n  } = useSendData();\r\n\r\n  const { onPassNameData: passNameData, url } = props;\r\n\r\n  useEffect(() => {\r\n    if (!nameIsTouched) {\r\n      return;\r\n    }\r\n    const identifier = setTimeout(() => {\r\n      sendInput(url, \"username\", nameInputValue);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(identifier);\r\n    };\r\n  }, [nameInputValue, nameIsTouched, url, sendInput]);\r\n\r\n  useEffect(() => {\r\n    passNameData({ nameInputValue, nameInputIsValid });\r\n  }, [passNameData, nameInputValue, nameInputIsValid]);\r\n\r\n  const nameInputClasses =\r\n    !nameInputIsValid && nameIsTouched\r\n      ? `${classes[\"form-control\"]} ${classes.invalid}`\r\n      : classes[\"form-control\"];\r\n\r\n  return (\r\n    <div className={nameInputClasses}>\r\n      <label htmlFor=\"name\">Your Name</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"name\"\r\n        onChange={nameChangeHandler}\r\n        onBlur={nameBlurHandler}\r\n        value={nameInputValue}\r\n        placeholder=\"Username\"\r\n      />\r\n      {nameErrorResponse && !nameDeFocused && (\r\n        <p className={classes[\"info-text\"]}>{nameErrorResponse}</p>\r\n      )}\r\n      {nameErrorResponse && nameDeFocused && (\r\n        <p className={classes[\"error-text\"]}>{nameErrorResponse}</p>\r\n      )}\r\n      {props.register && nameInputIsValid && (\r\n        <p className={classes[\"valid-text\"]}>{success.message}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Username;\r\n","import { useEffect } from \"react\";\r\nimport useInput from \"../hooks/use-input\";\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst ConfPassword = (props) => {\r\n  const {\r\n    enteredValue: confPasswordInputValue,\r\n    isTouched: confPasswordIsTouched,\r\n    deFocused: confPasswordDeFocused,\r\n    inputChangeHandler: confPasswordChangeHandler,\r\n    inputBlurHandler: confPasswordBlurHandler,\r\n  } = useInput();\r\n\r\n  const { onPassConfPasswordData: passConfPasswordData } = props;\r\n\r\n  let confPasswordInputIsValid = false\r\n  if (props.passwordInputValue === confPasswordInputValue) {\r\n    confPasswordInputIsValid = true\r\n  }\r\n\r\n  useEffect(() => {\r\n    passConfPasswordData({confPasswordInputIsValid});\r\n  }, [passConfPasswordData, confPasswordInputIsValid]);\r\n\r\n  const confPasswordInputClasses =\r\n    !confPasswordInputIsValid && confPasswordIsTouched\r\n      ? `${classes[\"form-control\"]} ${classes.invalid}`\r\n      : classes[\"form-control\"];\r\n\r\n  return (\r\n    <div className={confPasswordInputClasses}>\r\n      <label htmlFor=\"confPassword\">Your E-mail</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"confPassword\"\r\n        onChange={confPasswordChangeHandler}\r\n        onBlur={confPasswordBlurHandler}\r\n        value={confPasswordInputValue}\r\n        placeholder=\"Confirm Password\"\r\n      />\r\n      {!confPasswordDeFocused &&\r\n        confPasswordIsTouched &&\r\n        !confPasswordInputIsValid && (\r\n          <p className={classes[\"info-text\"]}>\r\n            Password and confirm password must be same\r\n          </p>\r\n        )}\r\n      {confPasswordDeFocused &&\r\n        confPasswordIsTouched &&\r\n        !confPasswordInputIsValid && (\r\n          <p className={classes[\"error-text\"]}>\r\n            Password and confirm password must be same\r\n          </p>\r\n        )}\r\n      {confPasswordInputIsValid && confPasswordInputValue.trim().length > 0 &&(\r\n        <p className={classes[\"valid-text\"]}>\r\n          Password and confirm password matched.\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfPassword;\r\n","import { useCallback, useState } from \"react\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport Username from \"../../UI/Username\";\r\nimport Email from \"../../UI/Email\";\r\nimport Password from \"../../UI/Password\";\r\nimport ConfPassword from \"../../UI/ConfPassword\";\r\n\r\nimport classes from \"./UserForm.module.css\";\r\n\r\nconst UserForm = (props) => {\r\n  const [usernameData, setUsernameData] = useState({});\r\n  const [emailData, setEmailData] = useState({});\r\n  const [passwordData, setPasswordData] = useState({});\r\n  const [confPasswordData, setConfPasswordData] = useState({});\r\n\r\n  const url = \"/api/register\";\r\n\r\n  const passNameData = useCallback((data) => {\r\n    setUsernameData(data);\r\n  }, []);\r\n\r\n  const passEmailData = useCallback((data) => {\r\n    setEmailData(data);\r\n  }, []);\r\n\r\n  const passPasswordData = useCallback((data) => {\r\n    setPasswordData(data);\r\n  }, []);\r\n\r\n  const passConfPasswordData = useCallback((data) => {\r\n    setConfPasswordData(data);\r\n  }, []);\r\n\r\n  let formIsValid = false;\r\n\r\n  if (\r\n    usernameData.nameInputIsValid &&\r\n    emailData.emailInputIsValid &&\r\n    passwordData.passwordInputIsValid &&\r\n    confPasswordData.confPasswordInputIsValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    //  This needs only if we not disable submit button\r\n    // if (\r\n    //   !usernameData.nameInputIsValid ||\r\n    //   !emailData.emailInputIsValid ||\r\n    //   !passwordData.passwordInputIsValid ||\r\n    //   !confPasswordData.confPasswordInputIsValid\r\n    // ) {\r\n    //   return;\r\n    // }\r\n\r\n    const newUser = {\r\n      username: usernameData.nameInputValue,\r\n      email: emailData.emailInputValue,\r\n      password: passwordData.passwordInputValue,\r\n    };\r\n\r\n    props.onAddUser(newUser);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.form}>\r\n      <form onSubmit={onSubmitHandler}>\r\n        <Username onPassNameData={passNameData} url={url} register={true} />\r\n        <Email onPassEmailData={passEmailData} url={url} register={true} />\r\n        <Password onPassPasswordData={passPasswordData} url={url} register={true} />\r\n        <ConfPassword\r\n          onPassConfPasswordData={passConfPasswordData}\r\n          passwordInputValue={passwordData.passwordInputValue}\r\n        />\r\n        <Button disabled={!formIsValid} type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { Fragment, useCallback, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useSendData from \"../../hooks/use-sendData\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport Modal from \"../../UI/Modal\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nconst Register = (props) => {\r\n  const history = useHistory();\r\n  const {\r\n    inputIsValid: success,\r\n    errorResponse: error,\r\n    isLoading,\r\n    sendInput,\r\n    resetState,\r\n  } = useSendData();\r\n\r\n  const addUser = useCallback(\r\n    (newUser) => {\r\n      sendInput(\"/api/register\", \"submit\", newUser);\r\n    },\r\n    [sendInput]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!error && success) {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [error, success, history]);\r\n\r\n  const onClickHandler = () => {\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isLoading && <UserForm onAddUser={addUser} />}\r\n      {isLoading && !error && <LoadingSpinner />}\r\n      {error && (\r\n        <Modal\r\n          onClick={onClickHandler}\r\n          title={\"Error Message\"}\r\n          content={error}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","const UserList = (props) => {\r\n  const users_list = props.users.map((user) => {\r\n    return <li key={user.username}>{user.username}, {user.email}</li>;\r\n  });\r\n\r\n  return <ul>{users_list}</ul>;\r\n};\r\n\r\nexport default UserList;\r\n","import { Fragment, useEffect } from \"react\";\r\nimport UserList from \"./UserList\";\r\nimport useGetData from \"../../hooks/use-getData\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\n\r\nconst Users = () => {\r\n  const {\r\n    data: usersData,\r\n    error,\r\n    isLoading,\r\n    isSuccess,\r\n    fetchData: getUser,\r\n  } = useGetData(\"/api/users\");\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, [getUser]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {isSuccess && usersData.payload.length === 0 && <p>No users are added</p>}\r\n      {isSuccess && usersData.payload.length > 0 && <UserList users={usersData.payload} />}\r\n      {isLoading && !error && <LoadingSpinner />}\r\n      {!isLoading && error && <p>{error}</p>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport AuthContext from \"../../store/auth-context\"\r\n\r\nconst Logout = () => {\r\n    const ctxAuth = useContext(AuthContext)\r\n    const history = useHistory()\r\n    const { tokenHandler } = ctxAuth\r\n\r\n    useEffect(()=>{\r\n        tokenHandler(false)\r\n        history.push('/home')\r\n    },[tokenHandler, history])\r\n\r\n    return null\r\n}\r\n\r\nexport default Logout","import { useState, Fragment, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport useSendData from \"../../hooks/use-sendData\";\r\nimport Email from \"../../UI/Email\";\r\nimport Button from \"../../UI/Button\";\r\nimport Card from \"../../UI/Card\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport Modal from \"../../UI/Modal\";\r\n\r\nimport classes from \"./Form.module.css\";\r\n\r\nconst ResetEmailForm = () => {\r\n  const [emailData, setEmailData] = useState({});\r\n  const history = useHistory();\r\n\r\n  const url = \"/api/reset_request\"\r\n\r\n  const {\r\n    inputIsValid: success,\r\n    errorResponse: error,\r\n    isLoading,\r\n    successResponse,\r\n    sendInput,\r\n    resetState,\r\n  } = useSendData();\r\n\r\n  let formIsValid = false;\r\n\r\n  if (emailData.emailInputIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const passEmailData = useCallback((data) => {\r\n    setEmailData(data);\r\n  }, []);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newData = {\r\n      email: emailData.emailInputValue,\r\n    };\r\n\r\n    sendInput(url, \"submit\", newData);\r\n  };\r\n\r\n  const modalClickHandler = () => {\r\n    resetState();\r\n    if (success) {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.form}>\r\n        <form onSubmit={submitHandler}>\r\n          <Email onPassEmailData={passEmailData} url={url}/>\r\n          <Button type=\"submit\" disabled={!formIsValid}>\r\n            Send Request\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n      {isLoading && !error && <LoadingSpinner />}\r\n      {!isLoading && error && (\r\n        <Modal\r\n          onClick={modalClickHandler}\r\n          title={\"Error Message\"}\r\n          content={error}\r\n        />\r\n      )}\r\n      {!isLoading && success && (\r\n        <Modal\r\n          onClick={modalClickHandler}\r\n          title={\"Success Message\"}\r\n          content={successResponse.message}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResetEmailForm;\r\n","import { useState, useCallback, Fragment } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport useSendData from \"../../hooks/use-sendData\";\r\nimport Password from \"../../UI/Password\";\r\nimport ConfPassword from \"../../UI/ConfPassword\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport LoadingSpinner from \"../../UI/LoadingSpinner\";\r\nimport Modal from \"../../UI/Modal\";\r\n\r\nimport classes from \"./Form.module.css\";\r\n\r\nconst ResetPasswordForm = () => {\r\n  const [passwordData, setPasswordData] = useState({});\r\n  const [confPasswordData, setConfPasswordData] = useState({});\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  const url = \"/api/reset_password\";\r\n\r\n  const {\r\n    inputIsValid: success,\r\n    errorResponse: error,\r\n    isLoading,\r\n    successResponse,\r\n    sendInput,\r\n    resetState,\r\n  } = useSendData();\r\n\r\n  const passPasswordData = useCallback((data) => {\r\n    setPasswordData(data);\r\n  }, []);\r\n\r\n  const passConfPasswordData = useCallback((data) => {\r\n    setConfPasswordData(data);\r\n  }, []);\r\n\r\n  let formIsValid = false;\r\n\r\n  console.log(passwordData.passwordInputIsValid);\r\n  console.log(confPasswordData.confPasswordInputIsValid);\r\n\r\n  if (\r\n    passwordData.passwordInputIsValid &&\r\n    confPasswordData.confPasswordInputIsValid\r\n  ) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newData = {\r\n      password: passwordData.passwordInputValue,\r\n      token: params.token,\r\n    };\r\n    sendInput(url, \"submit\", newData);\r\n  };\r\n\r\n  const modalClickHandler = () => {\r\n    resetState();\r\n    if (success) {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card className={classes.form}>\r\n        <form onSubmit={submitHandler}>\r\n          <Password onPassPasswordData={passPasswordData} url={url} />\r\n          <ConfPassword\r\n            onPassConfPasswordData={passConfPasswordData}\r\n            passwordInputValue={passwordData.passwordInputValue}\r\n           />\r\n          <Button disabled={!formIsValid} type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </Card>\r\n      {isLoading && !error && <LoadingSpinner />}\r\n      {!isLoading && error && (\r\n        <Modal\r\n          onClick={modalClickHandler}\r\n          title={\"Error Message\"}\r\n          content={error}\r\n        />\r\n      )}\r\n      {!isLoading && success && (\r\n        <Modal\r\n          onClick={modalClickHandler}\r\n          title={\"Success Message\"}\r\n          content={successResponse.message}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","const NotFound = () => {\r\n    return (\r\n        <div className=\"centered\">\r\n            Page not found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport Home from \"./pages/home/Home\";\nimport Login from \"./pages/login/Login\";\nimport About from \"./pages/about/About\";\nimport Register from \"./pages/register/Register\";\nimport Users from \"./pages/users/Users\";\nimport Logout from \"./pages/logout/Logout\";\nimport ResetEmailForm from \"./pages/reset/ResetEmailForm\";\nimport ResetPasswordForm from \"./pages/reset/ResetPasswordForm\";\nimport NotFound from \"./pages/NotFound\";\n\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/users\">\n          <Users />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <Route path=\"/reset_request\">\n          <ResetEmailForm />\n        </Route>\n        <Route path=\"/reset_password/:token\">\n          <ResetPasswordForm />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { AuthContextProvider } from \"./store/auth-context\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__38nAk\",\"nav__links\":\"Navbar_nav__links__1yPNd\",\"nav__link\":\"Navbar_nav__link__39zw5\",\"active\":\"Navbar_active__2hOJL\"};"],"sourceRoot":""}